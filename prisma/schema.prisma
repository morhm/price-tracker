// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  trackers      Tracker[]
  tags          Tag[]
  accounts      Account[]
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Tracker {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      Int
  title       String
  description String?
  targetPrice Decimal?
  isArchived  Boolean   @default(false)
  tags        Tag[]
  listings    Listing[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([userId, title])
}

model Tag {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    Int
  trackers  Tracker[]
  name      String
  createdAt DateTime  @default(now())

  @@unique([userId, name])
}

model Listing {
  id            Int      @id @default(autoincrement())
  tracker       Tracker  @relation(fields: [trackerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  trackerId     Int
  title         String
  url           String
  domain        String
  currentPrice  Decimal
  targetPrice   Decimal?
  isAvailable   Boolean
  lastCheckedAt DateTime
  createdAt     DateTime @default(now())
  history     ListingSnapshot[]

  @@unique([trackerId, url])
}

model ListingSnapshot {
  id          Int      @id @default(autoincrement())
  listing     Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  listingId   Int
  price       Decimal
  isAvailable Boolean
  source      String
  createdAt   DateTime @default(now())
}
